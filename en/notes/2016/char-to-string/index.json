{
  "title": "Convert Char to String in Java",
  "content": "Convert Char to String.\nUse String.valueOf(char) Use Character.toString(char) Note: this method simply returns a call to String.valueOf(char) Use string concatenation String s = \u0026quot;\u0026quot; + 'c' Note: this compiles down to 1 String s = new StringBuilder().append(\u0026#34;\u0026#34;).append(\u0026#39;c\u0026#39;).toString(); which is less efficient because StringBuilder is backed by char[] (over-allocated by StringBuilder() to 16) and this array will be copied to the resulting String. On the other hand, String.valueOf(char) wraps the char in a single-element array and passes it to the package private constructor String(char[], boolean), which avoids the array copy.1 http://stackoverflow.com/questions/8172420/how-to-convert-a-char-to-a-string-in-java\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n",
  "summary": "Convert Char to String.\n",
  "date": "2016-11-02T00:00:00Z",
  "lastmod": "2016-11-02T00:00:00Z",
  "permalink": "https://nianze.github.io/en/notes/2016/char-to-string/",
  "type": "notes",
  "kind": "page",
  "section": "notes",
  "tags": ["algorithm"],
  "categories": ["coding"],
  "series": ["algorithm"]
}
